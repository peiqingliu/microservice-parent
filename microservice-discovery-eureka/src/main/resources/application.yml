#spring:
#  profiles:
#    active: primary
#security:
#  basic:
#    enabled: true
#  user:
#    name: liupeiqing
#    password: 3bB5ivE8

#eureka:
#  client:
#    fetch-registry: false
#    registerWithEureka: false  #不注册到其他eureka上面
#    service-url:
#      defaultZone: http://liupeiqing:3bB5ivE8@localhost:8761/eureka  #客户端与服务端交互的zone的地址  zone类似于机房 eureka放在机房里面(zong)
#  server:
#    enable-self-preservation: false #Eureka自我保护机制以及心跳周期长会遇到 Eureka不剔除已关停的节点的问题，默认打开状态。建议生产环境打开此配置
#    eviction-interval-timer-in-ms: 4000

#此时Eureka Server 同时也是个Eureka Client,需要设置eureka.client.serviceUrl.defaultZone,值是另外两个

---
spring:
  application:
    name: eureka-server-clustered
  profiles: primary
server:
  port: 8011
eureka:
  instance:
    hostname: eureka-primary
  client:
    registerWithEureka: true  #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
    fetchRegistry: true       #此客户端是否获取eureka服务器注册表上的注册信息，默认为true
    serviceUrl:
      defaultZone: http://eureka-secondary:8012/eureka/,http://eureka-tertiary:8013/eureka/

---
spring:
  application:
    name: eureka-server-clustered
  profiles: secondary
server:
  port: 8012
eureka:
  instance:
    hostname: eureka-secondary
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-tertiary:8013/eureka/,http://eureka-primary:8011/eureka/

---
spring:
  application:
    name: eureka-server-clustered
  profiles: tertiary
server:
  port: 8013
eureka:
  instance:
    hostname: eureka-tertiary
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-primary:8011/eureka/,http://eureka-secondary:8012/eureka/